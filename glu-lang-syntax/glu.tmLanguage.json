{
  "name": "Glu",
  "scopeName": "source.glu",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#keywords" },
    { "include": "#functions" },
    { "include": "#operators" },
    { "include": "#types" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.glu",
          "match": "//.*$"
        },
        {
          "name": "comment.block.glu",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [{ "include": "#comments" }]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.glu",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.glu", "match": "\\\\." }
          ]
        },
        {
          "name": "string.quoted.single.glu",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "name": "constant.character.escape.glu", "match": "\\\\." }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.glu",
          "match": "\\b(?:0[xX][0-9A-Fa-f](?:_[0-9A-Fa-f])*|0[bB][01](?:_[01])*|0[oO][0-7](?:_[0-7])*|\\d(?:_\\d)*(?:\\.\\d(?:_\\d)*)?(?:[eE][\\+\\-]?\\d(?:_\\d)*)?)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.glu",
          "match": "\\b(?:if|else|while|for|return|break|continue|switch|case)\\b"
        },
        {
          "name": "storage.type.glu",
          "match": "\\b(?:let|var|func|struct|enum|typealias|import)\\b"
        },
        {
          "name": "constant.language.glu",
          "match": "\\b(?:true|false)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "meta.function.call.glu",
          "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\s*(?=\\()",
          "captures": {
            "1": { "name": "entity.name.function.glu" }
          }
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.glu",
          "match": "(\\+\\+|\\-\\-|\\+|\\-|\\*|\\/|%|==|!=|<=|>=|<|>|=|\\+=|\\-=|\\*=|\\/=|%=|&&|\\|\\||!|\\?|:|\\.|,)"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.glu",
          "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.type.primitive.glu",
          "match": "\\b(?:Int|Char|String|Bool|Void)\\b"
        }
      ]
    }
  }
}
